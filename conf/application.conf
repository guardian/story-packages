pekko {
  loggers = ["org.apache.pekko.event.Logging$DefaultLogger", "org.apache.pekko.event.slf4j.Slf4jLogger"]
  loglevel = WARNING
  actor {
    default-dispatcher = {
      fork-join-executor {
        parallelism-factor = 1.0
        parallelism-max = 24
      }
    }
    java-futures = {
      fork-join-executor {
        parallelism-factor = 1.0
        parallelism-max = 1
      }
    }
    front-press = {
      fork-join-executor {
        parallelism-factor = 1.0
        parallelism-max = 4
      }
    }
    memcached = {
      fork-join-executor {
        parallelism-factor = 1.0
        parallelism-max = 24
      }
    }
  }
}

play {
  application {
    loader: Loader
  }

  il8n {
    langs: "en"
  }

  ws {
    compressionEnabled: true
  }

  http {
    secret {
        # If a Play app needs a secure Play Application Secret, it should use https://github.com/guardian/play-secret-rotation
        key="This app doesn't need a secure PAS so long as it DOES NOT use session cookies, CSRF tokens, etc"
    }
    session {
      secure=true
    }

    # Traffic is forwarded via the ELB, whose IP we cannot predict, so trust all incoming traffic.
    # Necessary to ensure that `request.secure` is `true` in RequestHeaders, a prerequisite for
    # ensuring that the CORSFilter works correctly (it will assume a http:// address if this is
    # not the case, and the comparison between origin (https) and host (assumed http) will fail.)
    forwarded.trustedProxies = [ "0.0.0.0/0" ]
  }

  filters {
    cors {
      allowedOrigins: []
      allowedHttpMethods: ["GET"]
      allowedHttpHeaders: ["X-Requested-With","Origin","Accept","Content-Type"]
    }
  }
}

environment {
    applicationName: "story-packages"
}

aws {
  region: "eu-west-1"
  bucket: "story-packages-store"
  crossAccount: false
}

pandomain {
  service: "packages"
  roleArn: "arn:aws:iam::753338109777:role/Fronts-panda-IAM-FaciaToolRole-NKNXCYEGL0F6"
  bucketName: "pan-domain-auth-settings"
}

logging {
  enabled: true
  fields {
    app: "packages"
  }
  kinesis {
    stream: "CentralELK-logging-cms-fronts-KinesisStream-6E2SpWf4GEMg"
    region: "eu-west-1"
    roleArn: "arn:aws:iam::163592447864:role/CentralELK-logging-cms-fronts-KinesisSenderRole-1XFVNHQ9H11KO"
  }
}

sentry {
  publicDSN: "https://4527e03d554a4962ae99a7481e9278ff@app.getsentry.com/35467"
}

switchboard {
  bucket: "facia-switches"
  object: "CODE/status.json"
}
PROD {
  switchboard.object: "PROD/status.json"
}

include file("/etc/gu/story-packages.application.secrets.conf")
